@model BajajCentra.Models.CommunicationViewModel
@{
    Layout = null; // This is a partial view.
}

<!-- The Header is now outside the main container to allow it to be full-width -->
<div class="full-screen-header">
    <h1 class="main-title">Whitelisting</h1>
    <label class="header-checkbox-container">
        <input type="checkbox" class="custom-checkbox"/>
        <span class="checkmark"></span>
    </label>
</div>

<!-- Main Page Content -->
<div class="page-container fullscreen-view">
    <div class="card">
        <div class="card-body">
            <div id="initial-selection">
                <div class="intro-section">
                    <div class="whitelisting-intro">
                        <p class="intro-text">For SMS or OTP Whitelisting, click here</p>
                        <button class="btn-whitelist-main" id="startWhitelistBtn">Click Here</button>
                    </div>
                </div>
            </div>

            <!-- This section is now hidden and controlled by the script -->
            <div id="type-selection-container" style="display: none;">
                 <div class="select-container">
                    <label class="env-label">Select Test Type</label>
                    <select class="custom-select" id="messageType">
                        <option value="">Select Type</option>
                        <option value="sms">SMS</option>
                        <option value="otp">OTP</option>
                    </select>
                </div>
            </div>

            <!-- Test Results Table -->
            <div id="testResults" class="test-results" style="width:100%;">
                <div class="table-header">
                    <h3>Test Results</h3>
                    <div class="search-box">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text" id="tableSearch" placeholder="Search entries...">
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>SS</th>
                                <th>SSS</th>
                                <th class="text-center">HorizontalApi Test</th>
                                <th class="text-center">UnifiedAPI Test</th>
                            </tr>
                        </thead>
                        <tbody id="tableBody">
                            <!-- Initial table data will be populated here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Structure (Functionality is unchanged) -->
<div class="modal-overlay" id="modalOverlay" style="display: none;">
    <div class="modal-box" id="modalBox">
        <div class="modal-header">
            <h2 id="modalTitle"></h2>
            <button class="modal-close-btn" id="modalCloseBtn">&times;</button>
        </div>
        <div class="modal-body">
            <div id="smsForm" class="form-section" style="display: none;">
                <div class="form-grid">
                    <div class="form-group"><label>Mobile Number<span class="required">*</span></label><div class="input-group"><span class="input-prefix">+91</span><input type="text" class="form-control required" id="sms-mobile" pattern="[0-9]*" maxlength="10"/></div></div>
                    <div class="form-group"><label>SUID<span class="required">*</span></label><input type="text" class="form-control required" id="sms-suid"/></div>
                    <div class="form-group"><label>UID<span class="required">*</span></label><input type="text" class="form-control required" id="sms-uid"/></div>
                    <div class="form-group"><label>Password<span class="required">*</span></label><input type="password" class="form-control required" id="sms-password"/></div>
                    <div class="form-group"><label>Template Identifier<span class="required">*</span></label><input type="text" class="form-control required" id="sms-template"/></div>
                    <div class="form-group"><label>Consent Check Parameter<span class="required">*</span></label><input type="text" class="form-control required" id="sms-consent"/></div>
                    <div class="form-group full-width"><label>Variables</label><div class="variables-container" id="sms-variables"><div class="variable-row"><div class="variable-inputs"><input type="text" class="form-control" placeholder="Name"/><input type="text" class="form-control" placeholder="Value"/></div><button type="button" class="btn btn-add-variable" onclick="addVariableRow()"><i class="fas fa-plus"></i></button></div></div></div>
                </div>
            </div>
            <div id="otpForm" class="form-section" style="display: none;">
                <div class="form-grid">
                    <div class="form-group"><label>Mobile Number</label><div class="input-group"><span class="input-prefix">+91</span><input type="text" class="form-control" id="otp-mobile" pattern="[0-9]*" maxlength="10"/></div><span class="error-message" id="otp-mobile-error"></span></div>
                    <div class="form-group"><label>SUID</label><input type="text" class="form-control" id="otp-suid"/></div>
                    <div class="form-group"><label>UID</label><input type="text" class="form-control" id="otp-uid"/></div>
                    <div class="form-group"><label>Password</label><input type="password" class="form-control" id="otp-password"/></div>
                    <div class="form-group"><label>Message Text</label><textarea class="form-control" id="otp-message" rows="3"></textarea></div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" id="modalCancelBtn">Cancel</button>
            <button type="button" class="btn btn-primary" id="testApiModalBtn">Test APIs</button>
        </div>
    </div>
</div>

<style>
    /* --- Styles for a Full-Screen, Compact Layout --- */
    :root {
        --brand-blue: #0052cc;
        --brand-blue-light: #4c9aff;
        --text-dark: #172b4d;
        --text-light: #505f79;
        --border-color: #dfe1e6;
        --shadow: 0 4px 8px rgba(9, 30, 66, 0.15);
    }
    
    .full-screen-header {
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        background: linear-gradient(45deg, var(--brand-blue), var(--brand-blue-light));
        color: white;
        padding: 1rem 1.5rem;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    }

    .main-title {
        margin: 0;
        font-size: 1.5rem;
        font-weight: 500;
    }
    
    .page-container { 
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
        padding-top: 0;             /* Remove top padding */
        margin: 0;  /* Remove margin */
        width: 100%; /* Occupy full width */
        height: calc(100vh - 60px); /* Full height minus header */
        display: flex;
        align-items: flex-start;    /* Align to top */
        justify-content: center; /* Center content horizontally */
    }
    
    .card {
        background: transparent; /* Make card background transparent */
        border-radius: 0;
        box-shadow: none; /* Remove shadow */
        border: none; /* Remove border */
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
        
    .card-body {
        padding: 0 2rem;            /* Remove top padding */
        text-align: center;
        width: 100%;
    }
    
    .whitelisting-intro {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;  /* Changed from center to flex-start */
        gap: 1.5rem;
        padding-top: 2rem;           /* Added padding at top */
        min-height: 200px;          /* Set minimum height */
    }

    .intro-text {
        font-size: 1.25rem;
        color: var(--text-dark);
        margin: 0;
        font-weight: 500;
        text-align: center;
    }

    .btn-whitelist-main {
        padding: 1rem 3rem;
        font-size: 1.1rem;
        font-weight: 600;
        border-radius: 8px;
        border: none;
        background: var(--brand-blue);
        color: white;
        cursor: pointer;
        transition: all 0.2s ease;
        box-shadow: 0 4px 10px rgba(0, 82, 204, 0.25);
        margin-top: 0.5rem;         /* Added margin at top */
    }
    .btn-whitelist-main:hover {
        transform: translateY(-3px);
        box-shadow: 0 7px 15px rgba(0, 82, 204, 0.3);
    }

    /* --- All other styles below are for functionality and remain unchanged --- */
    .select-container { margin: 1rem auto 0 auto; max-width: 350px; }
    .custom-select { width: 100%; padding: 0.8rem; border: 1px solid var(--border-color); border-radius: 8px; font-size: 1rem; appearance: none; background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23666666' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E"); background-repeat: no-repeat; background-position: right 0.75rem center; background-size: 1em; cursor: pointer; }
    .header-checkbox-container { position: absolute; right: 1.5rem; }
    .header-checkbox-container .custom-checkbox { opacity: 0; width: 0; height: 0; }
    .checkmark { display: block; height: 25px; width: 25px; background-color: rgba(255,255,255,0.3); border-radius: 5px; transition: background-color 0.2s; cursor:pointer;}
    .header-checkbox-container:hover .checkmark { background-color: rgba(255,255,255,0.5); }
    .header-checkbox-container .custom-checkbox:checked ~ .checkmark { background-color: #4CAF50; }
    .checkmark:after { content: ""; position: absolute; display: none; left: 9px; top: 5px; width: 5px; height: 10px; border: solid white; border-width: 0 3px 3px 0; transform: rotate(45deg); }
    .header-checkbox-container .custom-checkbox:checked ~ .checkmark:after { display: block; }
    .test-results .table-header { display: flex; justify-content: space-between; align-items: center; padding-bottom: 1rem; margin-bottom: 1rem; }
    .test-results .table-header h3 { font-size: 1.25rem; margin: 0; }
    .table-responsive {
        margin-top: 1rem;
        border: 1px solid var(--border-color);
        border-radius: 8px;
        overflow: hidden;
    }
    .table { width: 100%; margin-bottom: 0; }
    .table th {
        background: #f8f9fa;
        padding: 1rem;
        text-align: left;
        font-size: 0.9rem;
        font-weight: 600;
        border-bottom: 1px solid var(--border-color);
    }
    .table td {
        padding: 1rem;
        vertical-align: middle;
        border-bottom: 1px solid var(--border-color);
    }
    .table tr:last-child td {
        border-bottom: none;
    }
    .btn-test-group {
        display: flex;
        justify-content: center;
        gap: 0.5rem;
    }
    .test-results .table-header {
        margin: 1rem 0;
        padding: 0 1rem;
    }
    .search-box {
        position: relative;
        width: 250px;
    }
    .search-box input {
        width: 100%;
        padding: 0.5rem 1rem 0.5rem 2rem;
        border: 1px solid var(--border-color);
        border-radius: 4px;
    }
    .search-icon {
        position: absolute;
        left: 0.5rem;
        top: 50%;
        transform: translateY(-50%);
        color: var(--text-light);
    }
    .modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(9,30,66,0.5); z-index: 1000; display: flex; align-items: center; justify-content: center; backdrop-filter: blur(8px); }
    .modal-box { background: white; border-radius: 12px; width: 90%; max-width: 800px; display: flex; flex-direction: column; animation: slide-up 0.3s ease-out; }
    .modal-header { display: flex; justify-content: space-between; align-items: center; padding: 1rem 1.5rem; border-bottom: 1px solid #e5e7eb; }
    .modal-header h2 { font-size: 1.25rem; font-weight: 500; } .modal-close-btn { background: none; border: none; font-size: 1.75rem; cursor: pointer; color: #9aa0a6; }
    .modal-body { padding: 1.5rem; overflow-y: auto; }
    .modal-footer { padding: 1rem 1.5rem; border-top: 1px solid #e5e7eb; display: flex; justify-content: flex-end; gap: 0.75rem; background-color: #f8f9fa; }
    .btn-primary, .btn-secondary { border: none; padding: 0.6rem 1.5rem; border-radius: 6px; font-size: 0.9rem; font-weight: 500; cursor: pointer; }
    .btn-primary { background: var(--brand-blue); color: white; } .btn-secondary { background-color: #e9ecef; color: var(--text-dark); }
    .form-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1rem; }
    .form-group { text-align: left; } .full-width { grid-column: 1 / -1; }
    .form-group label { display: block; margin-bottom: 0.3rem; color: var(--text-light); font-size: 0.8rem; }
    .form-control { width: 100%; box-sizing: border-box; padding: 0.6rem; border: 1px solid var(--border-color); border-radius: 6px; }
    .required { color: var(--brand-red); }
    .input-group { position: relative; } .input-prefix { position: absolute; left: 10px; top: 50%; transform: translateY(-50%); }
    .input-group .form-control { padding-left: 40px; }
    .variables-container .variable-row { display: flex; align-items: center; gap: 0.5rem; margin-bottom: 0.5rem; }
    .variables-container .variable-inputs { display: flex; flex-grow: 1; gap: 0.5rem; }
    .btn-add-variable, .btn-remove-variable { background: #f1f3f5; border: 1px solid var(--border-color); border-radius: 50%; width: 28px; height: 28px; cursor: pointer; display: flex; align-items: center; justify-content: center; }
</style>

<script>
(function() {
    const initialSelection = document.getElementById('initial-selection');
    const typeSelectionContainer = document.getElementById('type-selection-container');
    const startWhitelistBtn = document.getElementById('startWhitelistBtn');
    const testResults = document.getElementById('testResults');
    const messageTypeSelect = document.getElementById('messageType');
    const modalOverlay = document.getElementById('modalOverlay');
    const modalTitle = document.getElementById('modalTitle');
    const modalSmsForm = document.querySelector('#modalBox #smsForm');
    const modalOtpForm = document.querySelector('#modalBox #otpForm');
    const testApiModalBtn = document.getElementById('testApiModalBtn');
    const backButton = document.getElementById('backButton');
    const tableBody = document.getElementById('tableBody');
    
    function openModal(type) {
        modalTitle.textContent = type.toUpperCase() + ' Whitelisting';
        modalSmsForm.style.display = (type === 'sms') ? 'block' : 'none';
        modalOtpForm.style.display = (type === 'otp') ? 'block' : 'none';
        modalOverlay.style.display = 'flex';
    }

    function closeModal() {
        modalOverlay.style.display = 'none';
        messageTypeSelect.value = '';
    }

    startWhitelistBtn.addEventListener('click', function() {
        initialSelection.style.display = 'none';
        typeSelectionContainer.style.display = 'block';
    });

    messageTypeSelect.addEventListener('change', function() {
        if (this.value) {
            openModal(this.value);
        }
    });

    testApiModalBtn.addEventListener('click', function() {
        closeModal();
        typeSelectionContainer.style.display = 'none';
        testResults.style.display = 'block';
        populateTable();
    });

    backButton.addEventListener('click', function() {
        testResults.style.display = 'none';
        typeSelectionContainer.style.display = 'none';
        initialSelection.style.display = 'block';
    });

    // Call populateTable immediately when the script loads
    populateTable();

    function populateTable() {
        const sampleData = [
            { ss: "Data 1", sss: "Detail A" },
            { ss: "Data 2", sss: "Detail B" }
        ];
        
        const tableBody = document.getElementById('tableBody');
        tableBody.innerHTML = '';
        
        sampleData.forEach(item => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${item.ss}</td>
                <td>${item.sss}</td>
                <td class="text-center btn-test-group">
                    <button class="btn btn-primary btn-sm">UAT</button>
                    <button class="btn btn-secondary btn-sm">PROD</button>
                </td>
                <td class="text-center btn-test-group">
                    <button class="btn btn-primary btn-sm">UAT</button>
                    <button class="btn btn-secondary btn-sm">PROD</button>
                </td>
            `;
            tableBody.appendChild(row);
        });
    }

    document.getElementById('modalCloseBtn').addEventListener('click', closeModal);
    document.getElementById('modalCancelBtn').addEventListener('click', closeModal);
    modalOverlay.addEventListener('click', e => (e.target === modalOverlay) && closeModal());

    window.addVariableRow = function() {
        const container = document.getElementById('sms-variables');
        const newRow = document.createElement('div');
        newRow.className = 'variable-row';
        newRow.innerHTML = `<div class="variable-inputs"><input type="text" class="form-control" placeholder="Name" /><input type="text" class="form-control" placeholder="Value" /></div><button type="button" class="btn btn-remove-variable"><i class="fas fa-minus"></i></button>`;
        container.appendChild(newRow);
        newRow.querySelector('.btn-remove-variable').addEventListener('click', function() { this.closest('.variable-row').remove(); });
    };
})();
</script>
